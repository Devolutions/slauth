name: Publish Package

on:
  workflow_dispatch:
    inputs:
      beta:
        description: Publish a beta version (npmjs)
        default: false
        required: true
        type: boolean
      android:
        description: Publish an android version (maven)
        default: true
        required: true
        type: boolean
      rust:
        description: Publish a rust version (crates.io)
        default: true
        required: true
        type: boolean
      swift:
        description: Publish a swift version (cocoapods)
        default: true
        required: true
        type: boolean
      wasm:
        description: Publish a wasm (bundler) version (npmjs)
        default: true
        required: true
        type: boolean
      wasm_web:
        description: Publish a wasm (web) version (npmjs)
        default: true
        required: true
        type: boolean

jobs:
  build-wasm:
    environment: npm-publish
    if: ${{ inputs.wasm }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup wasm
      run: |
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        wasm-pack --version

    - name: Build
      run: sh build.sh
      working-directory: wrappers/wasm

    - name: Upload artifact
      uses: actions/upload-artifact@v4.3.6
      with:
        name: wasm
        path: dist/bundler

    - name: Configure NPM
      run: npm config set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"

    - name: Publish
      run: npm publish --tag ${{ inputs.beta && 'beta' || 'latest' }}
      working-directory: dist/bundler

    - name: Update Artifactory Cache
      run: gh workflow run update-artifactory-cache.yml --repo Devolutions/scheduled-tasks --field package_name="slauth"
      env:
        GH_TOKEN: ${{ secrets.DEVOLUTIONSBOT_WRITE_TOKEN }}

  build-wasm-web:
    environment: npm-publish
    if: ${{ inputs.wasm_web }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup wasm
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          wasm-pack --version

      - name: Build
        run: sh build-web.sh
        working-directory: wrappers/wasm

      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.6
        with:
          name: wasm-web
          path: dist/web

      - name: Configure NPM
        run: npm config set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"

      - name: Publish
        run: npm publish --tag ${{ inputs.beta && 'beta' || 'latest' }}
        working-directory: dist/web

      - name: Update Artifactory Cache
        run: gh workflow run update-artifactory-cache.yml --repo Devolutions/scheduled-tasks --field package_name="slauth-web"
        env:
          GH_TOKEN: ${{ secrets.DEVOLUTIONSBOT_WRITE_TOKEN }}

  build-android:
    environment: cloudsmith-publish
    if: ${{ inputs.android }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        java-version: 8
        distribution: adopt

    - name: Setup Android
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r23b-linux.zip
        unzip android-ndk-r23b-linux.zip
        export ANDROID_NDK_HOME=$GITHUB_WORKSPACE/android-ndk-r23b
        echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
        echo "$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
        echo "$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android" >> $GITHUB_ENV::LIBRARY_PATH
        echo "$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android" >> $GITHUB_ENV::LD_LIBRARY_PATH
        rustup target add aarch64-linux-android
        rustup target add x86_64-linux-android
        rustup target add x86_64-unknown-linux-gnu

    - name: Build
      run: sh wrappers/android/build.sh

    - name: Create local.properties
      run: echo "sdk.dir=$ANDROID_HOME" > local.properties

    - name: Allow gradlew to run
      run: chmod +x gradlew

    - name: Package .aar
      run: ./gradlew clean assembleRelease
      env:
        CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        CLOUDSMITH_USERNAME: bot-devolutions

    - run: ./gradlew publish
      env:
        CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        CLOUDSMITH_USERNAME: bot-devolutions

    - name: Upload .aar artifact
      uses: actions/upload-artifact@v4.3.6
      with:
        name: android
        path: wrappers/android/build/outputs/aar/slauth-release.aar

  build-rust:
    environment: crates-publish
    if: ${{ inputs.rust }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Publish
      run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  build-swift:
    environment: cocoapods-publish
    if: ${{ inputs.swift }}
    runs-on: macos-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup rust
      run: |
        rustup target add aarch64-apple-ios
        rustup target add x86_64-apple-ios
        cargo install cargo-lipo

    - name: Build iOS libraries
      run: sh wrappers/swift/build.sh

    - name: Setup CocoaPods Trunk Token
      run: |
        echo -e "machine trunk.cocoapods.org\n login bot@devolutions.net\n password ${{ secrets.COCOAPODS_TRUNK_TOKEN }}" > ~/.netrc
        chmod 0600 ~/.netrc

    - name: Setup version
      id: version
      run: |
        VERSION=$(grep -E "^\s*s\.version\s*=\s*['\"][0-9]+\.[0-9]+\.[0-9]+['\"]" Slauth.podspec | awk -F"[\"\']" '{print $2}')
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Push to a new branch
      run: |
        git checkout --orphan release/cocoapods-v${{ steps.version.outputs.version }}
        git rm -rf .
        git checkout master -- LICENSE wrappers/swift/classes slauth.h Slauth.podspec

        git add LICENSE wrappers/swift/classes/** slauth.h Slauth.podspec
        find target/universal/release -name "*.a" -exec git add {} \;
        find target/x86_64-apple-ios/release -name "*.a" -exec git add {} \;
        find target/aarch64-apple-ios/release -name "*.a" -exec git add {} \;

        git commit -m "Set up CocoaPods release branch"
        git push origin release/cocoapods-v${{ steps.version.outputs.version }}

        git tag '${{ steps.version.outputs.version }}'
        git push --tags
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Publish to CocoaPods
      run: pod trunk push Slauth.podspec --skip-import-validation --use-libraries --allow-warnings
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

    - name: Delete branch
      run: |
        git fetch
        git switch master
        git branch -D release/cocoapods-v${{ steps.version.outputs.version }}
        git push origin --delete release/cocoapods-v${{ steps.version.outputs.version }}
